<?php
/*
 * MIT License
 * Copyright (c) 2024 Kovyakin Dmitry kdv-1974@mail.ru
 */
/*
  |--------------------------------------------------------------------------
  | protected static string $type = 'line';
  |--------------------------------------------------------------------------
  | @var string
  | required
  | Type charts: line|bar|pie
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  | protected static bool $select = false;
  |--------------------------------------------------------------------------
  | @var bool
  | Selecting a chart type on a form
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  | protected static bool $control_hover = false;
  |--------------------------------------------------------------------------
  | @var bool
  | displaying the  points on the form
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  | protected static string|bool $stroke_dasharray = "2,2";
  |--------------------------------------------------------------------------
  | @var string|bool
  | Setting up a graph grid
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |     protected static array $chart_size = [
  |          'width' => 700, // width chart
  |          'height' => 300,// height chart
  |          'bar_max_width' => 30, // only type bar
  |      ];
  |--------------------------------------------------------------------------
  | @var array|int[]
  | graph size
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |  protected static array $margin = [
  |          'left' => 10,
  |          'top' => 40,
  |          'right' => 0,
  |          'bottom' => 0
  |      ];
  |--------------------------------------------------------------------------
  | @var array|int[]
  | Setting up chart indents on the form
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |  protected static string $direction = "horizontal";
  |--------------------------------------------------------------------------
  | @var string
  | direction charts: horizontal|vertical
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  | protected static bool $tooltip_show = false;
  |--------------------------------------------------------------------------
  | @var bool
  | displaying the values of the graph points on the form
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  | protected static array $marker = [];
  |--------------------------------------------------------------------------
  | @var array|array[]
  | Setting up marker lines
  | stroke_dasharray: Setting marker lines - length and gap
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |  protected static array $x_axis = [];
  |--------------------------------------------------------------------------
  | @var array|string[]
  | required
  | X-axis
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |  protected static bool $use_modal = false;
  |--------------------------------------------------------------------------
  | @var bool
  | Show an enlarged chart by double-clicking on the chart
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |  protected static array $modal=[
  |           'title'=>'Chart 1'
  |       ];
  |--------------------------------------------------------------------------
  | @var array|string[]
  | Modal window title
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |   protected static function y_axis(): array
  |       {
  |           return [];
  |       }
  |--------------------------------------------------------------------------
  | @return array[]
  | required
  | Y- axis
  | type:normal|natural|step|monotone;
  | color: color line;
  | label: show values points;
  | data: data y-axis;
  | linear_gradient: Set the graph fill gradient
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  |   public static function render(): View
  |       {
  |           return self::view();
  |       }
  |--------------------------------------------------------------------------
  | @return View
  | render: required
  |--------------------------------------------------------------------------
  |--------------------------------------------------------------------------
  */

declare(strict_types=1);

namespace {{ namespace }};

use Illuminate\Contracts\View\View;
use Kovyakin\Components\app\Interfaces\Components;
use Kovyakin\Components\app\Charts\Charts;
use Kovyakin\Components\app\Traits\ClassName;

class {{ class }} extends Charts implements Components
{
       use ClassName;
       use \Kovyakin\Components\app\Traits\RenderCharts;

    protected static string $type = 'line'; // line|bar|pie

    protected static array $x_axis = [

   ];

    protected static function y_axis(): array
    {
        return [
         'chart' => [
               'type' => 'normal', // type of graph => normal|natural|step|monotone
               'color' => 'black', // line color
               'data' => [

               ],
          ],
        ];
    }

       public static function render(): View
       {
           return self::view();
       }

}
